{"ast":null,"code":"var _jsxFileName = \"/home/utkarsh/Documents/iitb/cs387/lab4/200050146-200050147-lab4/frontend/src/components/Course/Course.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Head from '../Head/Head';\nimport NavBar from '../NavBar/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = process.env.REACT_APP_API_URL || \"http://localhost:5000/course\";\nconst Course = () => {\n  _s();\n  const {\n    course_id\n  } = useParams();\n  const [responseData, setResponseData] = useState({});\n  useEffect(() => {\n    const body = {\n      id: course_id\n    };\n    fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(data => setResponseData(data)).catch(error => console.error(error));\n  }, []);\n\n  // const responseDataArray = Object.values(responseData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"course-page\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", responseData.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"course-detail-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Course Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: responseData.course_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: responseData.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Credits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: responseData.credits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Prereq\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: responseData.prereq_id ? responseData.prereq_id.map(prereq => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/course/${prereq}`,\n                children: prereq\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this)]\n            }, prereq, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)) : `None`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Instructors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: responseData.instructors ? responseData.instructors.map(instructor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/instructor/${instructor[0]}`,\n                children: instructor[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, instructor, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)) : `None`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Course, \"xHe0ID9xQt8Tq7d7z3FIe5sKPfQ=\", false, function () {\n  return [useParams];\n});\n_c = Course;\nexport default Course;\nvar _c;\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Head","NavBar","endpoint","process","env","REACT_APP_API_URL","Course","course_id","responseData","setResponseData","body","id","fetch","method","headers","JSON","stringify","then","response","json","data","catch","error","console","title","credits","whiteSpace","prereq_id","map","prereq","instructors","instructor"],"sources":["/home/utkarsh/Documents/iitb/cs387/lab4/200050146-200050147-lab4/frontend/src/components/Course/Course.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Head from '../Head/Head';\nimport NavBar from '../NavBar/NavBar';\nconst endpoint = process.env.REACT_APP_API_URL || \"http://localhost:5000/course\";\n\nconst Course = () => {\n\n  const { course_id } = useParams()\n  const [ responseData, setResponseData] = useState({});\n\n  useEffect(() => {\n\n    const body = { id: course_id };\n    fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n    })\n    .then(response => response.json())\n    .then(data => setResponseData(data))\n    .catch(error => console.error(error));\n  }, []);\n\n  // const responseDataArray = Object.values(responseData);\n\n  return (\n    <div class='course-page'>\n        <Head/>\n        < NavBar/>\n        <h1> { responseData.title } </h1>\n        <table id=\"course-detail-table\">\n            <thead>\n                <tr>\n                    <th>Key</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                <tr>\n                    <td>Course Id</td>\n                    <td>{responseData.course_id}</td>\n                </tr>\n                <tr>\n                    <td>Title</td>\n                    <td>{responseData.title}</td>\n                </tr>\n                <tr>\n                    <td>Credits</td>\n                    <td>{responseData.credits}</td>\n                </tr>\n                <tr>\n                    <td>Prereq</td>\n                    <td style={{ whiteSpace: \"pre-wrap\" }}>\n                        {\n                            responseData.prereq_id\n                            ? responseData.prereq_id.map(prereq => (\n                                <React.Fragment key={prereq}>\n                                    <a href={`/course/${prereq}`}>{prereq}</a>\n                                    <br />\n                                </React.Fragment>\n                                ))\n                            : `None`\n                        }\n                    </td>     \n                </tr>\n                <tr>\n                    <td>Instructors</td>\n                    <td style={{ whiteSpace: \"pre-wrap\" }}>\n                        {\n                            responseData.instructors\n                            ? responseData.instructors.map(instructor => (\n                                <React.Fragment key={instructor}>\n                                    <a href={`/instructor/${instructor[0]}`}>{instructor[1]}</a>\n                                    <br />\n                                </React.Fragment>\n                                ))\n                            : `None`\n                        }\n                    </td>                \n                </tr>\n            </tbody>\n        </table>\n    </div>\n  );\n}\n\nexport default Course;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}